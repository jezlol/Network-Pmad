services:
  # NGINX API Gateway
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - api-python
    networks:
      - network-monitoring

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8080
      - NODE_ENV=development
    networks:
      - network-monitoring

  # Python FastAPI Backend
  api-python:
    build:
      context: ./apps/api-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api-python:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - SECRET_KEY=${SECRET_KEY}
    env_file:
      - .env
    networks:
      - network-monitoring

  # Go Collector Service
  collector-go:
    build:
      context: ./apps/collector-go
      dockerfile: Dockerfile
    volumes:
      - ./apps/collector-go:/app
    environment:
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
    env_file:
      - .env
    networks:
      - network-monitoring
    restart: unless-stopped

networks:
  network-monitoring:
    driver: bridge